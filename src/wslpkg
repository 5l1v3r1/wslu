#!/usr/bin/env bash
# wslpkg - WSL Package Installer
# Component of Windows 10 linux Subsystem Utility
# <https://github.com/patrick330602/wslu>

# Copyright(c) 2017 Patrick Wu J M <wotingwu@live.com>

# For more help for wslpkg, visit the following site:
# http://garage.patrickwu.cf/man/wslu/wslpkg

version="26"

. wslu --silent

help_short="wslpkg [add|remove] ..NAME... [REPO]\nwslpkg (-h|-v|-l)"

tmp_version="$(lsb_release -c -s)"
tpath_win=`wslpath -d -T`
tpath_linux=`wslpath -u -T`
apath_o=`wslpath -w -A`
apath_win=`wslpath -d -A`
apath_linux=`wslpath -u -A`
ppath_win=`wslpath -d -P`
spath_win=`wslpath -d -su`
if [[ $distro == "opensuse" ]] || [[$distro == "sles" ]]; then
	echo "${warn} Incompatible with OpenSUSE and SUSE Linux Enterprise Server. Action Aborted."
	exit 1
fi
case $1 in
	-h|--help) help $0 "$help_short"; exit;;
	-v|--version) echo "wslpkg v$wslu_version.$version"; exit;;
	-l|--list) echo -e "Available Special Package: \nPulseAudio\nVcXsrv\n"; exit;;
	add)
		if [[ -n $3 ]]; then
			echo "${info}Adding repository..."
			sudo add-apt-repository -y $3
			echo "${info}Updating source..."
			sudo apt-get update
			echo "${info}Installing $2...."
			sudo apt-get install -y $2
			echo "${info}$2 installed."
			exit
		# Install PulseAudio
		elif  [[ "$2" == "pulseaudio" ]]; then
			[[ -d $apath_linux/PulseAudio ]] && (echo "${warn}PulseAudio already installed; Aborted."; exit 32)
			case $tmp_version in
				trusty)
					echo "${info}Your are on $tmp_version. Adding corresponding repo..."
					sudo add-apt-repository -y ppa:aseering/wsl-pulseaudio
					;;
				xenial) 
					echo "${info}Your are on $tmp_version. Adding corresponding repo..."
					sudo add-apt-repository -y ppa:therealkenc/wsl-pulseaudio
					;;
				*)	echo "${error}Unsupported distro. Aborted."; exit 31;;
			esac
			echo "${info}Updating source..."
			sudo apt-get update
			echo "${info}Installing PulseAudio Linux client..."
			sudo apt-get install -y pulseaudio
			echo "${info}Applying PulseAusio Linux client fix..."
			sudo sed -i 's/; default-server =/default-server = 127.0.0.1/' /etc/pulse/client.conf
			echo "${info}Downloading PulseAudio Windows client..."
			wget -cO $tpath_linux/pulseaudio.zip https://github.com/kitor/wsl/raw/master/pulse6.zip
			echo "${info}Extracting files...."
			cmd.exe /k "md \"$tpath_win\\\\pulseaudio\" && exit"
			unzip -o $tpath_linux/pulseaudio.zip -d $tpath_linux/pulseaudio
			echo "${info}Installing PulseAudio Windows client..."
			cmd.exe /k "md \"$apath_win\\\\PulseAudio\" && exit"
			xcopy.exe /e "$tpath_win\\\\pulseaudio\\\\pulse6" "$apath_win\\\\PulseAudio"
			echo "${info}Setting PulseAudio to run at startup..."
			echo -e "set ws=wscript.createobject(\"wscript.shell\")\r\n" > "$apath_linux/Microsoft/Windows/Start Menu/Programs/Startup/start_pulseaudio.vbe"
			echo "ws.run \"$apath_o\PulseAudio\bin\pulseaudio.exe --exit-idle-time=-1\",0" >> "$apath_linux/Microsoft/Windows/Start Menu/Programs/Startup/start_pulseaudio.vbe"
			CR=$(printf '\r')
			sed "s/\$/$CR/" "$apath_linux/Microsoft/Windows/Start Menu/Programs/Startup/start_pulseaudio.vbe"
			echo "${info}Adding recommended settings..."
			echo "load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1" >> "$apath_linux/PulseAudio/etc/pulse/default.pa"
			echo "${info}PulseAudio installed. Restart to take effect."
			echo "${warn}DO NOT allow PulseAudio access to any of your networks if prompted."
		# VcXsrv Installer
		elif [[ "$2" == "vcxsrv" ]]; then
			echo "${info}Tweaking system files..."
			echo 'export DISPLAY=:0' >> ~/.bashrc
			sudo sed -i "s$<listen>.*</listen>$<listen>tcp:host=localhost,port=0</listen>$" /etc/dbus-1/session.conf
			echo "${info}Downloading VcXsrv..."
			if [[ -f $tpath_linux/vcxsrv.exe ]]; then
				rm -r $tpath_linux/vcxsrv.exe
			fi
			wget -cO $tpath_linux/vcxsrv.exe http://downloads.sourceforge.net/project/vcxsrv/vcxsrv/1.19.2.0/vcxsrv-64.1.19.2.0.installer.exe
			echo "${info}Setting VcXsrv to run at startup..."
			cd /mnt/c && powershell.exe "\$s=(New-Object -COM WScript.Shell).CreateShortcut('$apath_win\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\VcXsrv.lnk');\$s.TargetPath='\"$ppath_win\\VcXsrv\\vcxsrv.exe\"';\$s.Arguments=':0 -ac -terminate -lesspointer -multiwindow -clipboard -wgl';\$s.Save();"
			echo "${info}Start installer. After Installation, please restart to take effect."
			cd /mnt/c && cmd.exe /k "start "$tpath_win\\VcXsrv.exe" && exit"
			echo -e "${warn}DO NOT allow VcXsrv access to any of your networks if prompted."
		else
			echo "${error} No input or invalid input, aborting"
			exit 20
		fi;;
	remove)
		if [[ -n $3 ]]; then
			hash ppa-purge 2>/dev/null || (echo "${warn}ppa-purge not installed. Installing..."; sudo apt-get install ppa-purge)
			echo "${info}Removing $2..."
			sudo apt-get remove -y $2
			echo "${info}Removing repository..."
			sudo ppa-purge $3
			echo "${info}Updating source..."
			sudo apt-get update
			echo "${info}$2 removed."
			exit
		elif  [[ "$2" == "pulseaudio" ]]; then
			echo "${info}Removing PulseAudio Linux client..."
			sudo apt-get remove -y pulseaudio
			case $tmp_version in
				trusty)
					echo "${info}Your are on $tmp_version. Removing corresponding repo..."
					sudo ppa-purge ppa:aseering/wsl-pulseaudio
					;;
				xenial) 
					echo "${info}Your are on $tmp_version. Removing corresponding repo..."
					sudo ppa-purge ppa:therealkenc/wsl-pulseaudio
					;;
			esac
			echo "${info}Removing PulseAudio Windows client..."
			cd /mnt/c && cmd.exe /c "del $tpath_win\\pulseaudio.zip"
			cmd.exe /c "rmdir \"$tpath_win\\\\pulseaudio\" /s /q"
			cmd.exe /c "rmdir \"$apath_win\\\\PulseAudio\" /s /q"
			cd /mnt/c && cmd.exe /c "del $start_pulseaudio.vbe\\start_pulseaudio.vbe"
			echo "${info}PulseAudio Removed."
		elif [[ "$2" == "vcxsrv" ]]; then
			echo "${info}removing extra files..."
			cd /mnt/c && cmd.exe /c "del $apath_win\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\VcXsrv.lnk"
			echo "${info}start uninstaller..."
			cd /mnt/c && cmd.exe /c "start "$ppath_win\\uninstall.exe""
		else
			echo "${error}No input or invalid input, aborting"
			exit 20
		fi;;
	*) echo "${error}No input or invalid input, aborting"; exit 20;;
esac
		
